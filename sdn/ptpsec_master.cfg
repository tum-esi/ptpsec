##################
##### Config #####
##################
# For more info, check my_config_reference.cf or https://linux.die.net/man/8/ptp4l

### Golabl Settings ###
[global]
# Interval between Announce messages as power of two in seconds (default: 1 (2s))
logAnnounceInterval 1
# Interval between Sync messages as power of two in seconds (default: 0 (1s))
logSyncInterval 0
# Minimum permitted mean interval time between Delay_Req messages as power of two in seconds (default: 0 (1s))
logMinDelayReqInterval 0
# Minimum permitted mean interval time between Pdelay_Req messages as power of two in seconds (default: 0 (1s))
logMinPdelayReqInterval 0
# The number of missed Announce messages before the last Announce message expires (default: 3)
announceReceiptTimeout 3
# Subtype of respective Ethertype (e.g., AVB specific traffic) [0,255] (default: 0)
transportSpecific 0
# Enable/Disable the mechanism to trace the route of Announce messages (default: 0)
path_trace_enabled 0
# Enable/Disable to include 802.1AS data in Follow_Up message (default: 0)
follow_up_info 0
# Select the PTP delay mechanism [E2E, P2P, Auto] (default: E2E)
delay_mechanism E2E
# Select the network transport [UDPv4, UDPv6, L2] (default: UDPv4)
network_transport L2
# Enable/Disable the local clock as a two-step clock. One-step clocks are not supported yet. (default: 1)
twoStepFlag 1
# Time interval to estimate the ratio of local and peer clock frequencies as power of two in seconds (default: 1 (2s))
freq_est_interval 1
# Enable/Disable to treat one-step responses as two-step; Used as workaround for buggy 802.1AS switches (default: 0)
assume_two_step 0
# Servo type that is used to synchronize the local clock; currently only the PI controller is implemented (default: pi)
clock_servo pi
# Proportional gain of the PI controller; (default: 0.0 (which results to 0.7 for HWTS and 0.1 for SWTS)) 
pi_proportional_const 0.0
# Integral gain of the PI controller; (default: 0.0 (which results to 0.3 for HWTS and 0.001 for SWTS)) 
pi_integral_const 0.0
# Maximum offset that will be corrected by the PI controller instead of directly stepping the clock (default: 0.0 (which results to never stepping the clock)) 
step_threshold 0.0
# Max logging level that should be printed to stdout [0 (LOG_EMERG), 1 (LOG_ALERT), 2 (LOG_CRIT), 3 (LOG_ERR), 4 (LOG_WARNING), 5 (LOG_NOTICE), 6 (LOG_INFO), 7 (LOG_DEBUG)] (default: 6 (LOG_INFO))
logging_level 7
# Enable/Disable logging to stdout (default: 0)
verbose 1
# Enable/Disable logging to system log (default: 1)
use_syslog 1
# Time stamping method [hardware, software, legacy] (default: hardware)
time_stamping software

masterOnly 1

##### BMCA Options #####
# Priority1 attribute of local clock that helps to determine the best master clock [0,255] (default: 128)
priority1 1
# Priority2 attribute of local clock that helps to determine the best master clock [0,255] (default: 128)
priority2 1
# ClockClass attribute of local clock that specifies the clock quality; lower is better [0,255] (default: 248)
clockClass 248
# ClockAccuracy attribute of local clock that specifies the clock quality; (default: 0xFE)
clockAccuracy 0xFE
# OffsetScaledLogVariance attribute of local clock that specifies the stability of the clock (default: 0xFFFF)
offsetScaledLogVariance 0xFFFF

##### PTP Options #####
# Specify the PTP domain number for the local clock; Used to logically separate multiple time domains on the same network [0,239] (default: 0)
domainNumber 0
# Enable/Disable free running state for local clock; If enabled, the clock won't be adjusted (default: 0)
free_running 0

# Detection clock
clock_type DETECT
